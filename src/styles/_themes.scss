// We need to have two types of variables:
// 1. Global variables that set the colors independently from their context;
//    Example: --color--yellow
// 2. Contextual variables that use the global color ones to build a specific theme;
//    Example: --color--highlight-background, that uses --color--yellow
//    these can change between light/dark themes and in general should not be taken for granted, 
//    while in general it's okay to assume what the global color ones are.
//    In addition to light/dark themes, I'm also considering being able to swap accent (primary/secondary/tertiary) colors too.

@use './_mixins.scss' as mixins;

@mixin dark-color-palette {
  @include mixins.define-color('rosewater', #F5E0DC);
  @include mixins.define-color('flamingo', #F2CDCD);
  @include mixins.define-color('pink', #F5C2E7);
  @include mixins.define-color('mauve', #CBA6F7);
  @include mixins.define-color('red', #F38BA8);
  @include mixins.define-color('maroon', #EBA0AC);
  @include mixins.define-color('peach', #FAB387);
  @include mixins.define-color('yellow', #F9E2AF);
  @include mixins.define-color('green', #A6E3A1);
  @include mixins.define-color('teal', #94E2D5);
  @include mixins.define-color('sky', #89DCEB);
  @include mixins.define-color('sapphire', #74C7EC);
  @include mixins.define-color('blue', #89B4FA);
  @include mixins.define-color('lavender', #B4BEFE);

  @include mixins.define-color('gray-0', #CDD6F4);
  @include mixins.define-color('gray-50', #BAC2DE);
  @include mixins.define-color('gray-100', #A6ADC8);
  @include mixins.define-color('gray-200', #9399B2);
  @include mixins.define-color('gray-300', #7F849C);
  @include mixins.define-color('gray-400', #6C7086);
  @include mixins.define-color('gray-500', #585B70);
  @include mixins.define-color('gray-600', #45475A);
  @include mixins.define-color('gray-700', #313244);
  @include mixins.define-color('gray-800', #1E1E2E);
  @include mixins.define-color('gray-900', #181825);
  @include mixins.define-color('gray-1000', #11111B);
}

@mixin light-color-palette {
  @include mixins.define-color('rosewater', #DC8A78);
  @include mixins.define-color('flamingo', #DD7878);
  @include mixins.define-color('pink', #EA76CB);
  @include mixins.define-color('mauve', #8839EF);
  @include mixins.define-color('red', #D20F39);
  @include mixins.define-color('maroon', #E64553);
  @include mixins.define-color('peach', #FE640B);
  @include mixins.define-color('yellow', #DF8E1D);
  @include mixins.define-color('green', #40A02B);
  @include mixins.define-color('teal', #179299);
  @include mixins.define-color('sky', #04A5E5);
  @include mixins.define-color('sapphire', #209FB5);
  @include mixins.define-color('blue', #1E66F5);
  @include mixins.define-color('lavender', #7287FD);

  @include mixins.define-color('gray-0', #4C4F69);
  @include mixins.define-color('gray-50', #5C5F77);
  @include mixins.define-color('gray-100', #6C6F85);
  @include mixins.define-color('gray-200', #7C7F93);
  @include mixins.define-color('gray-300', #8C8FA1);
  @include mixins.define-color('gray-400', #9CA0B0);
  @include mixins.define-color('gray-500', #ACB0BE);
  @include mixins.define-color('gray-600', #BCC0CC);
  @include mixins.define-color('gray-700', #CCD0DA);
  @include mixins.define-color('gray-800', #EFF1F5);
  @include mixins.define-color('gray-900', #E6E9EF);
  @include mixins.define-color('gray-1000', #DCE0E8);

  @include mixins.define-color('gray-1100', #FFFFFF);
  @include mixins.define-color('code-background', #11111B);
  @include mixins.define-color('code-text', #CDD6F4);
}

@mixin theme-base {
  --theme--text-base-color: var(--color--gray-0);
  --theme--text-accent-color: var(--color--gray-50);
  --theme--text-heading-color: var(--color--gray-0);
  --theme--text-inverse-color: var(--color--gray-1000);

  --theme--background-base-color: var(--color--gray-800);
  --theme--background-accent-color: var(--color--gray-700);

  --theme--border-base-color: var(--color--gray-200);

  // Accent color is used in buttons, links, etc.
  // But it's not the only color used in the theme.
  // Colors might vary by purpose or subject.
  --theme--color-accent: var(--color--teal);
  --theme--color-accent-rgb: var(--color--teal-rgb);
  --theme--color-accent-shade: hsl(
    var(--color--teal-h),
    var(--color--teal-s),
    var(--color--teal-l - 10%)
  );
  --theme--color-accent-tint: hsl(
    var(--color--teal-h),
    var(--color--teal-s),
    var(--color--teal-l + 10%)
  );


  // #region Colors for common elements

  --theme--color-links: var(--theme--color-accent);
  --theme--color-callouts-info: var(--color--blue);
  --theme--color-callouts-warning: var(--color--yellow);
  --theme--color-callouts-success: var(--color--green);

  --theme--color-sparkles: var(--color--yellow);
  --theme--color-marker-highlight: var(--color--yellow);
  --theme--color-marker-highlight-rgb: var(--color--yellow-rgb);
  --theme--color-marker-highlight-contrast: var(--color--yellow-contrast);

  --theme--color-code-background: var(--color--gray-1000);
  --theme--color-code-text: var(--color--gray-0);
  

  // #endregion

  // #region Shadows / Glows

  --theme--shadow-card: 0 4px 10px 0 rgba(0, 0, 0, 0.1);
  --theme--shadow-image: 1px 3px 8px 0 rgba(39, 44, 49, 0.03), 1px 3px 8px 0 rgba(39, 44, 49, 0.06);

  --theme--glow-blue: 0 0 40px 0 rgba(var(--color--blue-rgb), 0.4);
  --theme--glow-yellow: 0 0 40px 0 rgba(var(--color--yellow-rgb), 0.4);
  --theme--glow-green: 0 0 40px 0 rgba(var(--color--green-rgb), 0.4);
  --theme--glow-teal: 0 0 40px 0 rgba(var(--color--teal-rgb), 0.4);
  --theme--glow-lavender: 0 0 40px 0 rgba(var(--color--lavender-rgb), 0.4);
  --theme--glow-mauve: 0 0 40px 0 rgba(var(--color--mauve-rgb), 0.4);


  --theme--glow-callouts-info: var(--theme--glow-blue);
  --theme--glow-callouts-warning: var(--theme--glow-yellow);
  --theme--glow-callouts-success: var(--theme--glow-green);
  --theme--glow-links: 0px 0px 3px rgba(var(--color--teal-rgb), 0.7);

  // #endregion
}

@mixin dark-theme {
  @include dark-color-palette;
  @include theme-base;
}

@mixin light-theme {
  @include light-color-palette;
  @include theme-base;

  --theme--text-inverse-color: var(--color--gray-1100);

  --theme--color-code-background: var(--color--code-background);
  --theme--color-code-text: var(--color--code-text);
}

:root {
	@include light-theme;

	&[data-theme='dark'] {
		@include dark-theme;
	}

	&[data-theme='auto'] {
		@media (prefers-color-scheme: dark) {
			@include dark-theme;
		}
	}
}