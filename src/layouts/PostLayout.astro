---
import Image from '@components/atoms/Image';
import MarkdownRenderer from '@components/molecules/MarkdownRenderer';
import PostHero from '@components/organisms/PostHero';
import type { BlogPost } from '@schemas/blog';
import { handleCmsMediaPath } from '@utils/functions';
import BaseLayout from './BaseLayout.astro';
import Header from '@components/organisms/Header';

interface Props {
  post: {
    body?: string;
    data: BlogPost;
  };
}

const { post }: Props = Astro.props;
---

<BaseLayout
  title={post.data.title}
  keywords={post.data.categories}
  description={post.data.excerpt}
  image={post.data.coverImage}
  autoGenerateImage={!post.data.showImage || !post.data.coverImage}
  slug={`blog/${post.data.slug}`}
  published_date={post.data.date}
  modified_date={post.data.updated}
>
  <main class="l-post">
    <div class="l-post__container">
      <div class="l-post__header">
        <Header client:load />

        <PostHero
          title={post.data.title}
          author={post.data.author}
          date={post.data.date}
          readingTime={post.data.readingTime}
          tags={post.data.categories}
        />
    </div>

      <div class="u-markdown u-container-small">
        {post.data.showImage && post.data.coverImage && (
          <Image
            src={handleCmsMediaPath(post.data.coverImage)}
            alt={post.data.coverImageAlt}
            lazy={false}
          />
        )}
        <MarkdownRenderer content={post.body} client:load />
      </div>
    </div>
  </main>
</BaseLayout>

<style lang="scss">
  @use '@styles/_breakpoints.scss';

  .l-post {
    &__header {
      background-color: var(--theme--background-accent-color);
      border-bottom-left-radius: var(--border-radius);
      border-bottom-right-radius: var(--border-radius);
    }

    &__container {
      display: flex;
      flex-direction: column;
      gap: var(--spacing-xxl);

      @include breakpoints.for-phone-only {
        gap: var(--spacing-xl);
      }
    }
  }
</style>